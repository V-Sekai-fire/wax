name: Build and Run Wax Targets

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build gcc g++ default-jdk lua5.3 swift

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0"

      - name: Create build directory
        run: mkdir build

      - name: Run CMake
        run: cmake -S . -B build -GNinja

      - name: Build with Ninja
        run: cmake --build build

      - name: Transpile and check outputs
        run: |
          cd build
          for file in ../examples/*.wax; do
            base=$(basename "$file" .wax)
            
            # Java
            ./waxc "$file" --java "${base}.java"
            javac "${base}.java"
            OUTPUT=$(java "$base" 9)
            echo "Java Output for $file: $OUTPUT"
            
            # TypeScript
            ./waxc "$file" --ts "${base}.ts"
            npm install -g typescript
            tsc "${base}.ts"
            OUTPUT=$(node "${base}.js" 9)
            echo "TypeScript Output for $file: $OUTPUT"
            
            # Python
            ./waxc "$file" --py "${base}.py"
            OUTPUT=$(python3 "${base}.py" 9)
            echo "Python Output for $file: $OUTPUT"
            
            # C++
            ./waxc "$file" --cpp "${base}.cpp"
            g++ "${base}.cpp" -o "${base}_cpp"
            OUTPUT=$("./${base}_cpp" 9)
            echo "C++ Output for $file: $OUTPUT"
            
            # Swift
            ./waxc "$file" --swift "${base}.swift"
            swiftc "${base}.swift" -o "${base}_swift"
            OUTPUT=$("./${base}_swift" 9)
            echo "Swift Output for $file: $OUTPUT"
            
            # Lua
            ./waxc "$file" --lua "${base}.lua"
            OUTPUT=$(lua "${base}.lua" 9)
            echo "Lua Output for $file: $OUTPUT"
            
            # JSON
            ./waxc "$file" --json "${base}.json"
            cat "${base}.json"
          done
